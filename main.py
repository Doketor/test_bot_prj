from aiogram import Bot, executor, Dispatcher, types

from config import TOKEN_API

bot = Bot(TOKEN_API)
dp = Dispatcher(bot)

async def on_startup(_):
    print('–Ø –∑–∞–ø—É—Å—Ç–∏–ª—Å—è')

HELP_INFO = '''
<b>/give</b> - <i>–ø–æ–ª—É—á–∞–µ—à—å —Å–º–µ—à–Ω–æ–≥–æ –∫–æ—Ç–∏–∫–∞</i>
<b>/help</b> - <i>–ø–æ–ª—É—á–∞–µ—à—å –ø–æ–º–æ—à—å</i>
'''


@dp.message_handler(commands=['give'])
async def send_stikers(message: types.Message):
    await message.answer(text='–°–º–æ—Ç—Ä–∏ –∫–∞–∫–æ–π —Å–º–µ—à–Ω–æ–π –∫–æ—Ç')
    await message.answer_sticker(sticker='CAACAgQAAxkBAAEJ8BFkz7bTgQjYdrmBkWmC4MEvcdcK6AACJQEAAqghIQbYv0ET_Pm8ei8E')


@dp.message_handler(commands='help')
async def get_help(message: types.Message):
    await message.answer(HELP_INFO, parse_mode='HTML')

@dp.message_handler(content_types=['sticker'])
async def send_stikers_id(message: types.Message):
    await message.answer(text=message.sticker.file_id)


@dp.message_handler()
async def send_black_heart(message: types.Message):
    if '‚ù§Ô∏è'  in message.text:
        return await message.answer(text='üñ§')
    if '‚úÖ' in message.text:
        return await message.answer(text=str(message.text.count('‚úÖ')))
    await message.answer('–¢—ã –∫—Ä–∞—Å–∞–≤—á–∏–∫')




if __name__ == '__main__':
    executor.start_polling(dp, on_startup=on_startup)


